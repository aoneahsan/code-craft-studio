name: Code Quality

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run ESLint
      run: yarn lint --format stylish

    - name: Run Prettier check
      run: yarn prettier --check .

    - name: Check TypeScript
      run: yarn tsc --noEmit

    - name: Check for security vulnerabilities
      run: yarn audit --level moderate

    - name: Check bundle size
      run: |
        yarn build
        echo "Bundle size report:"
        ls -lah dist/
        find dist -name "*.js" -o -name "*.css" | xargs du -h

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      continue-on-error: true

    - name: License check
      run: |
        npx license-checker --production --summary --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;CC0-1.0;CC-BY-3.0;CC-BY-4.0;Unlicense'
      continue-on-error: true

    - name: Comment PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          // Read coverage report if exists
          let coverage = 'N/A';
          try {
            const coverageReport = fs.readFileSync('coverage/coverage-summary.json', 'utf8');
            const coverageData = JSON.parse(coverageReport);
            coverage = `${coverageData.total.lines.pct}%`;
          } catch (e) {
            console.log('Coverage report not found');
          }
          
          const comment = `## üìä Code Quality Report
          
          - ‚úÖ ESLint passed
          - ‚úÖ Prettier check passed
          - ‚úÖ TypeScript check passed
          - üì¶ Bundle size: Check workflow logs
          - üîç Code coverage: ${coverage}
          
          Thanks for contributing to QRCode Studio! üéâ`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });